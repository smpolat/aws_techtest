name: CI
on:
  pull_request:
    paths:
      - "terraform/**.tf"
      - "wordpress/**"
      - ".github/workflows/ci.yml"

jobs:
  wordpress:
    name: wordpress
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
      AWS_REGION: eu-west-1
      BUCKET_URL: s3://interviewuser1-app-bucket20220420101811790700000001/

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Zip & Deploy Wordpress Code
        run: |
          ls -al 
          zip -r wordpress.zip ./wordpress
          aws s3 cp wordpress.zip $BUCKET_URL --dry-run

  terraform:
    name: terraform plan
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
      AWS_REGION: eu-west-1
      TF_VAR_db_name: ${{ secrets.DB_NAME }}
      TF_VAR_db_user: ${{ secrets.DB_USER }}
      TF_VAR_db_pass: ${{ secrets.DB_PASS }}
      TF_VAR_auth_key: ${{ secrets.AUTH_KEY }}
      TF_VAR_secure_auth_key: ${{ secrets.SECURE_AUTH_KEY }}
      TF_VAR_logged_in_key: ${{ secrets.LOGGED_IN_KEY }}
      TF_VAR_nonce_key: ${{ secrets.NONCE_KEY }}
      TF_VAR_auth_salt: ${{ secrets.AUTH_SALT }}
      TF_VAR_secure_auth_salt: ${{ secrets.SECURE_AUTH_SALT }}
      TF_VAR_logged_in_salt: ${{ secrets.LOGGED_IN_SALT }}
      TF_VAR_nonce_salt: ${{ secrets.NONCE_SALT }}

    defaults:
      run:
        working-directory: terraform

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: hashicorp/setup-terraform@v1
      - name: format check
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: terraform init
        id: init
        run: terraform init -lock=false
      - name: terraform plan
        id: plan
        run: terraform plan -lock=false